"""
    Copyright 2015 Impera

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Contact: bart@impera.io
"""

entity Agent extends NetworkInput, NetworkOutput:
    """
        A collectd agent that collects metrics

        :param forward: Instruct the network plugin to forward inputs to outputs
    """
    bool forward=false
end

entity NetworkInput extends ip::services::Server:
    """
        A collectd network input: accepts metrics using the collectd network protocol.
    """
end

entity NetworkOutput extends ip::services::BaseClient:
    """
        A collectd network output: sends metrics over the network using the collect protocol.
    """
end

NetworkInput inputs [0:] -- [0:] NetworkOutput outputs

implementation collectdAgent for Agent:
    cfg_file = std::ConfigFile(host=host, path="/etc/collectd.conf", requires=pkg,
        content=std::template("collectd/collectd.conf.tmpl"), reload=true)
    cfg_dir = std::DefaultDirectory(host=host, path="/etc/collectd.d", requires=pkg)

    network_cfg = std::ConfigFile(host=host, path="/etc/collectd.d/network.conf", reload=true,
                                  content=std::template("collectd/network.conf.tmpl"), requires=pkg)

    pkg = std::Package(host=host, name="collectd", state="installed")
    svc = std::Service(host=host, name="collectd", state="running", onboot=true)
    svc.requires = [cfg_dir, cfg_file, pkg, network_cfg]
end

implementation collectdAgentUbuntu for Agent:
    cfg_file = std::ConfigFile(host=host, path="/etc/collectd/collectd.conf", requires=pkg,
        content=std::template("collectd/collectd.conf.ubuntu.tmpl"), reload=true)
    cfg_dir = std::DefaultDirectory(host=host, path="/etc/collectd/collectd.conf.d", requires=pkg)

    pkg = std::Package(host=host, name="collectd", state="installed")
    svc = std::Service(host=host, name="collectd", state="running", onboot=true)
    svc.requires = [cfg_dir, cfg_file, pkg]
end

implement Agent using collectdAgent when std::familyof(host.os, "rhel") or std::familyof(host.os, "fedora")
implement Agent using collectdAgentUbuntu when std::familyof(host.os, "ubuntu")

